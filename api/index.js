Index.PACKAGES = {"zio" : [], "zio.optics" : [{"name" : "zio.optics.AtZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the specified index of a chunk in aZRef.", "members_class" : [{"label" : "at", "tail" : "(n: Int): ZRef[EA, EB, A, A]", "member" : "zio.optics.AtZRefSyntax.at", "link" : "zio\/optics\/package$$AtZRefSyntax.html#at(n:Int):zio.ZRef[EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.AtZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$AtZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$AtZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$AtZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$AtZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$AtZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$AtZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$AtZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$AtZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$AtZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$AtZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$AtZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$AtZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$AtZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$AtZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$AtZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$AtZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$AtZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$AtZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$AtZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$AtZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.BuildInfo", "case object" : "zio\/optics\/BuildInfo$.html", "shortDescription" : "This object was generated by sbt-buildinfo.", "members_case object" : [{"label" : "toString", "tail" : ": String", "member" : "zio.optics.BuildInfo.toString", "link" : "zio\/optics\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "isSnapshot", "tail" : ": Boolean", "member" : "zio.optics.BuildInfo.isSnapshot", "link" : "zio\/optics\/BuildInfo$.html#isSnapshot:Boolean", "kind" : "val"}, {"label" : "sbtVersion", "tail" : ": String", "member" : "zio.optics.BuildInfo.sbtVersion", "link" : "zio\/optics\/BuildInfo$.html#sbtVersion:String", "kind" : "val"}, {"label" : "scalaVersion", "tail" : ": String", "member" : "zio.optics.BuildInfo.scalaVersion", "link" : "zio\/optics\/BuildInfo$.html#scalaVersion:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "zio.optics.BuildInfo.version", "link" : "zio\/optics\/BuildInfo$.html#version:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "zio.optics.BuildInfo.name", "link" : "zio\/optics\/BuildInfo$.html#name:String", "kind" : "val"}, {"label" : "moduleName", "tail" : ": String", "member" : "zio.optics.BuildInfo.moduleName", "link" : "zio\/optics\/BuildInfo$.html#moduleName:String", "kind" : "val"}, {"label" : "organization", "tail" : ": String", "member" : "zio.optics.BuildInfo.organization", "link" : "zio\/optics\/BuildInfo$.html#organization:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/BuildInfo$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/optics\/BuildInfo$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/BuildInfo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/BuildInfo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "zio.optics.ConsZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the :: case of a List in aZRef.", "members_class" : [{"label" : "cons", "tail" : "(): ZRef[EA, EB, (A, List[A]), (A, List[A])]", "member" : "zio.optics.ConsZRefSyntax.cons", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#cons:zio.ZRef[EA,EB,(A,List[A]),(A,List[A])]", "kind" : "def"}, {"member" : "zio.optics.ConsZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$ConsZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$ConsZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$ConsZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.ERefSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZRefwhen the error types are unified.", "members_class" : [{"label" : "accessField", "tail" : "(optic: optics.Optic[B, B, C, ED, EC, D, A]): ZRef[EC, ED, C, D]", "member" : "zio.optics.ERefSyntax.accessField", "link" : "zio\/optics\/package$$ERefSyntax.html#accessField[EC>:EA,ED>:EB,C,D](optic:zio.optics.package.Optic[B,B,C,ED,EC,D,A]):zio.ZRef[EC,ED,C,D]", "kind" : "def"}, {"label" : "accessElements", "tail" : "(optic: optics.Optic[B, B, Chunk[C], ED, EC, Chunk[D], A]): ZRef[EC, ED, Chunk[C], Chunk[D]]", "member" : "zio.optics.ERefSyntax.accessElements", "link" : "zio\/optics\/package$$ERefSyntax.html#accessElements[EC>:EA,ED>:EB,C,D](optic:zio.optics.package.Optic[B,B,zio.Chunk[C],ED,EC,zio.Chunk[D],A]):zio.ZRef[EC,ED,zio.Chunk[C],zio.Chunk[D]]", "kind" : "def"}, {"member" : "zio.optics.ERefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$ERefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$ERefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$ERefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$ERefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$ERefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$ERefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$ERefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ERefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ERefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ERefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$ERefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$ERefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$ERefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$ERefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$ERefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$ERefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$ERefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$ERefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$ERefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$ERefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.FilterZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing a filtered subset of a chunk in aZRef.", "members_class" : [{"label" : "filter", "tail" : "(f: (A) => Boolean): ZRef[EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.FilterZRefSyntax.filter", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#filter(f:A=>Boolean):zio.ZRef[EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.FilterZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$FilterZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$FilterZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$FilterZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.FirstZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the first element of a tuple in aZRef.", "members_class" : [{"label" : "first", "tail" : "(): ZRef[EA, EB, C, A]", "member" : "zio.optics.FirstZRefSyntax.first", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#first:zio.ZRef[EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.FirstZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$FirstZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$FirstZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$FirstZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.HeadZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the head of a list in a ZRef.", "members_class" : [{"label" : "head", "tail" : "(): ZRef[EA, EB, A, A]", "member" : "zio.optics.HeadZRefSyntax.head", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#head:zio.ZRef[EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.HeadZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$HeadZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$HeadZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$HeadZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.KeyZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the value at the specified key in amap in a ZRef.", "members_class" : [{"label" : "key", "tail" : "(k: K): ZRef[EA, EB, V, V]", "member" : "zio.optics.KeyZRefSyntax.key", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#key(k:K):zio.ZRef[EA,EB,V,V]", "kind" : "def"}, {"member" : "zio.optics.KeyZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$KeyZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$KeyZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$KeyZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.LeftZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Left case of an Either in aZRef.", "members_class" : [{"label" : "left", "tail" : "(): ZRef[EA, EB, C, A]", "member" : "zio.optics.LeftZRefSyntax.left", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#left:zio.ZRef[EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.LeftZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$LeftZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$LeftZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$LeftZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.NoneZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the None case of an Option in aZRef.", "members_class" : [{"label" : "none", "tail" : "(): ZRef[EA, EB, Unit, Unit]", "member" : "zio.optics.NoneZRefSyntax.none", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#none:zio.ZRef[EA,EB,Unit,Unit]", "kind" : "def"}, {"member" : "zio.optics.NoneZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$NoneZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$NoneZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$NoneZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.OpticComposeModule", "trait" : "zio\/optics\/OpticComposeModule.html", "kind" : "trait", "members_trait" : [{"label" : "LowPriorityOpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#LowPriorityOpticComposeextendsAnyRef", "kind" : "trait"}, {"label" : "OpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.OpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#OpticCompose", "kind" : "object"}, {"label" : "OpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.OpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,SetWholeBefore2,GetError,SetError,SetError1,GetPiece]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose", "trait" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticComposeModule.OpticCompose", "object" : "zio\/optics\/OpticComposeModule$OpticCompose$.html", "members_object" : [{"label" : "prismCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, Any, SetWholeBefore, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.OpticCompose.prismCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#prismCompose[GetWhole<:SetWholeBefore,SetWholeBefore,GetError,SetError<:SetError1,SetError1,GetPiece]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,Any,SetWholeBefore,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/optics\/OpticComposeModule$OpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compose", "tail" : "(left: (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore, SetPiece, GetError, SetError, GetPiece, SetWholeAfter], right: (OpticComposeModule.this)#Optic[GetPiece, SetWholeBefore1, SetPiece1, GetError1, SetError1, GetPiece1, SetPiece]): (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore2, SetPiece1, GetError1, SetError1, GetPiece1, SetWholeAfter]", "member" : "zio.optics.OpticComposeModule.OpticCompose.compose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#compose[SetPiece,SetPiece1,GetError1>:GetError,GetPiece1,SetWholeAfter](left:OpticComposeModule.this.Optic[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter],right:OpticComposeModule.this.Optic[GetPiece,SetWholeBefore1,SetPiece1,GetError1,SetError1,GetPiece1,SetPiece]):OpticComposeModule.this.Optic[GetWhole,SetWholeBefore2,SetPiece1,GetError1,SetError1,GetPiece1,SetWholeAfter]", "kind" : "abstract def"}], "shortDescription" : "OpticCompose abstracts over the different ways that optics can becomposed together, allowing all optics to be composed with a singleoperator."}, {"name" : "zio.optics.OpticFailureModule", "trait" : "zio\/optics\/OpticFailureModule.html", "kind" : "trait", "members_trait" : [{"label" : "OpticFailure", "tail" : "", "member" : "zio.optics.OpticFailureModule.OpticFailure", "link" : "zio\/optics\/OpticFailureModule.html#OpticFailureextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticFailureModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticFailureModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticFailureModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticFailureModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticFailureModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticFailureModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticFailureModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticFailureModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticFailureModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticFailureModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticFailureModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticFailureModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticFailureModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticFailureModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticFailureModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticFailureModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticFailureModule.OpticFailure", "shortDescription" : "An OpticFailure describes how getting or setting a piece of a wholeusing an optic failed.", "members_case class" : [{"member" : "zio.optics.OpticFailureModule.OpticFailure#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "zio.optics.OpticFailureModule.OpticFailure.message", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticFailureModule$OpticFailure.html", "kind" : "case class"}, {"name" : "zio.optics.OpticModule", "trait" : "zio\/optics\/OpticModule.html", "kind" : "trait", "members_trait" : [{"label" : "Optic", "tail" : "", "member" : "zio.optics.OpticModule.Optic", "link" : "zio\/optics\/OpticModule.html#Optic", "kind" : "object"}, {"label" : "Optic", "tail" : "", "member" : "zio.optics.OpticModule.Optic", "link" : "zio\/optics\/OpticModule.html#Optic[-GetWhole,-SetWholeBefore,-SetPiece,+GetError,+SetError,+GetPiece,+SetWholeAfter]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticModule.Optic", "shortDescription" : "An Optic is able to get and set a piece of a whole, possibly failing.", "object" : "zio\/optics\/OpticModule$Optic$.html", "members_object" : [{"label" : "TailPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.TailPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#TailPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SomePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SomePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SomePartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SlicePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SlicePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SlicePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SecondPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SecondPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SecondPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "RightPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.RightPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#RightPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "NonePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.NonePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#NonePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError,Piece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LeftPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LeftPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LeftPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "KeyPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.KeyPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#KeyPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Key,Value,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "HeadPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.HeadPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#HeadPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FirstPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FirstPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FirstPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FilterPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FilterPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FilterPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ConsPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ConsPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ConsPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "AtPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.AtPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#AtPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PariallyAppliedOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PariallyAppliedOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PariallyAppliedOpticSyntax[SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ForEachSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ForEachSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ForEachSyntax[GetWhole,SetWholeBefore<:GetWhole,SetPiece,GetError>:SetError,SetError,SetError1>:GetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ComposeSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ComposeSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ComposeSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PrismSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PrismSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PrismSyntax[GetWhole,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LensSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LensSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LensSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "IsoSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.IsoSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#IsoSyntax[Whole,Piece]extendsAnyRef", "kind" : "implicit class"}, {"label" : "EOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.EOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#EOpticSyntax[GetWhole,SetWholeBefore,SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "tail", "tail" : "(): (OpticModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticModule.Optic.tail", "link" : "zio\/optics\/OpticModule$Optic$.html#tail[A]:OpticModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "some", "tail" : "(): (OpticModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticModule.Optic.some", "link" : "zio\/optics\/OpticModule$Optic$.html#some[A,B]:OpticModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.slice", "link" : "zio\/optics\/OpticModule$Optic$.html#slice[A](from:Int,until:Int):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "second", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticModule.Optic.second", "link" : "zio\/optics\/OpticModule$Optic$.html#second[A,B,C]:OpticModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticModule.Optic.right", "link" : "zio\/optics\/OpticModule$Optic$.html#right[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticModule.Optic.none", "link" : "zio\/optics\/OpticModule$Optic$.html#none[A]:OpticModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticModule.Optic.left", "link" : "zio\/optics\/OpticModule$Optic$.html#left[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticModule.Optic.key", "link" : "zio\/optics\/OpticModule$Optic$.html#key[K,V](k:K):OpticModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "identity", "tail" : "(): (OpticModule.this)#Iso[A, A]", "member" : "zio.optics.OpticModule.Optic.identity", "link" : "zio\/optics\/OpticModule$Optic$.html#identity[A]:OpticModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticModule.Optic.head", "link" : "zio\/optics\/OpticModule$Optic$.html#head[A]:OpticModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticModule.Optic.first", "link" : "zio\/optics\/OpticModule$Optic$.html#first[A,B,C]:OpticModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.filter", "link" : "zio\/optics\/OpticModule$Optic$.html#filter[A](f:A=>Boolean):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticModule.Optic.cons", "link" : "zio\/optics\/OpticModule$Optic$.html#cons[A,B]:OpticModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.at", "link" : "zio\/optics\/OpticModule$Optic$.html#at[A](n:Int):OpticModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticModule$Optic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticModule$Optic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticModule$Optic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zip", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.zip", "link" : "zio\/optics\/OpticModule$Optic.html#zip[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.orElse", "link" : "zio\/optics\/OpticModule$Optic.html#orElse[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "get", "tail" : "(whole: GetWhole): (OpticModule.this)#OpticResult[GetError, GetPiece]", "member" : "zio.optics.OpticModule.Optic.get", "link" : "zio\/optics\/OpticModule$Optic.html#get(whole:GetWhole):OpticModule.this.OpticResult[GetError,GetPiece]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<>", "link" : "zio\/optics\/OpticModule$Optic.html#<>[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<*>", "link" : "zio\/optics\/OpticModule$Optic.html#<*>[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "apply", "tail" : "(whole: GetWhole with SetWholeBefore): (OpticModule.this)#OpticPartiallyApplied[SetPiece, GetError, SetError, GetPiece, SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.apply", "link" : "zio\/optics\/OpticModule$Optic.html#apply(whole:GetWholewithSetWholeBefore):OpticModule.this.OpticPartiallyApplied[SetPiece,GetError,SetError,GetPiece,SetWholeAfter]", "kind" : "final def"}, {"member" : "zio.optics.OpticModule.Optic#<init>", "error" : "unsupported entity"}, {"label" : "setOptic", "tail" : ": (SetPiece) => (SetWholeBefore) => (OpticModule.this)#OpticResult[(SetError, SetWholeAfter), SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.setOptic", "link" : "zio\/optics\/OpticModule$Optic.html#setOptic:SetPiece=>(SetWholeBefore=>OpticModule.this.OpticResult[(SetError,SetWholeAfter),SetWholeAfter])", "kind" : "val"}, {"label" : "getOptic", "tail" : ": (GetWhole) => (OpticModule.this)#OpticResult[(GetError, SetWholeAfter), GetPiece]", "member" : "zio.optics.OpticModule.Optic.getOptic", "link" : "zio\/optics\/OpticModule$Optic.html#getOptic:GetWhole=>OpticModule.this.OpticResult[(GetError,SetWholeAfter),GetPiece]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticModule$Optic.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticModule$Optic.html", "kind" : "case class"}, {"name" : "zio.optics.OpticResultModule", "trait" : "zio\/optics\/OpticResultModule.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E, B])(f: (A, B) => C): OpticResult[E, C]", "member" : "zio.optics.OpticResultModule.zipWith", "link" : "zio\/optics\/OpticResultModule.html#zipWith[E,A,B,C](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E,B])(f:(A,B)=>C):OpticResultModule.this.OpticResult[E,C]", "kind" : "final def"}, {"label" : "zip", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E, B]): OpticResult[E, (A, B)]", "member" : "zio.optics.OpticResultModule.zip", "link" : "zio\/optics\/OpticResultModule.html#zip[E,A,B](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,(A,B)]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E2, A]): OpticResult[E2, A]", "member" : "zio.optics.OpticResultModule.orElse", "link" : "zio\/optics\/OpticResultModule.html#orElse[E,E2,A](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E2,A]):OpticResultModule.this.OpticResult[E2,A]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(opticResult: OpticResult[E, A])(f: (E) => E2): OpticResult[E2, A]", "member" : "zio.optics.OpticResultModule.mapError", "link" : "zio\/optics\/OpticResultModule.html#mapError[E,E2,A](opticResult:OpticResultModule.this.OpticResult[E,A])(f:E=>E2):OpticResultModule.this.OpticResult[E2,A]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(iterable: Iterable[A])(f: (A) => OpticResult[E, B]): OpticResult[E, Chunk[B]]", "member" : "zio.optics.OpticResultModule.foreach", "link" : "zio\/optics\/OpticResultModule.html#foreach[E,A,B](iterable:Iterable[A])(f:A=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,zio.Chunk[B]]", "kind" : "final def"}, {"label" : "collectAllSuccesses", "tail" : "(iterable: Iterable[OpticResult[E, A]]): OpticResult[Nothing, Chunk[A]]", "member" : "zio.optics.OpticResultModule.collectAllSuccesses", "link" : "zio\/optics\/OpticResultModule.html#collectAllSuccesses[E,A](iterable:Iterable[OpticResultModule.this.OpticResult[E,A]]):OpticResultModule.this.OpticResult[Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticResultModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticResultModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticResultModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticResultModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticResultModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticResultModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticResultModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticResultModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticResultModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticResultModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticResultModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticResultModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticResultModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticResultModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticResultModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticResultModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticResultModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticResultModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticResultModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "succeed", "tail" : "(a: A): OpticResult[Nothing, A]", "member" : "zio.optics.OpticResultModule.succeed", "link" : "zio\/optics\/OpticResultModule.html#succeed[A](a:A):OpticResultModule.this.OpticResult[Nothing,A]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(opticResult: OpticResult[E, A])(f: (A) => B): OpticResult[E, B]", "member" : "zio.optics.OpticResultModule.map", "link" : "zio\/optics\/OpticResultModule.html#map[E,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:A=>B):OpticResultModule.this.OpticResult[E,B]", "kind" : "abstract def"}, {"label" : "foldM", "tail" : "(opticResult: OpticResult[E, A])(f: (E) => OpticResult[E2, B], g: (A) => OpticResult[E2, B]): OpticResult[E2, B]", "member" : "zio.optics.OpticResultModule.foldM", "link" : "zio\/optics\/OpticResultModule.html#foldM[E,E2,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:E=>OpticResultModule.this.OpticResult[E2,B],g:A=>OpticResultModule.this.OpticResult[E2,B]):OpticResultModule.this.OpticResult[E2,B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(opticResult: OpticResult[E, A])(f: (A) => OpticResult[E, B]): OpticResult[E, B]", "member" : "zio.optics.OpticResultModule.flatMap", "link" : "zio\/optics\/OpticResultModule.html#flatMap[E,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:A=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,B]", "kind" : "abstract def"}, {"label" : "fail", "tail" : "(e: E): OpticResult[E, Nothing]", "member" : "zio.optics.OpticResultModule.fail", "link" : "zio\/optics\/OpticResultModule.html#fail[E](e:E):OpticResultModule.this.OpticResult[E,Nothing]", "kind" : "abstract def"}, {"member" : "zio.optics.OpticResultModule.OpticResult", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.optics.Optics", "trait" : "zio\/optics\/Optics.html", "kind" : "trait", "members_trait" : [{"label" : "ZTraversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversal", "link" : "zio\/optics\/OpticTypesModule.html#ZTraversal", "kind" : "object"}, {"label" : "ZPrism", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrism", "link" : "zio\/optics\/OpticTypesModule.html#ZPrism", "kind" : "object"}, {"label" : "ZOptional", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptional", "link" : "zio\/optics\/OpticTypesModule.html#ZOptional", "kind" : "object"}, {"label" : "ZLens", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLens", "link" : "zio\/optics\/OpticTypesModule.html#ZLens", "kind" : "object"}, {"label" : "ZIso", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIso", "link" : "zio\/optics\/OpticTypesModule.html#ZIso", "kind" : "object"}, {"label" : "Traversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.Traversal", "link" : "zio\/optics\/OpticTypesModule.html#Traversal", "kind" : "object"}, {"label" : "Prism", "tail" : "", "member" : "zio.optics.OpticTypesModule.Prism", "link" : "zio\/optics\/OpticTypesModule.html#Prism", "kind" : "object"}, {"label" : "Optional", "tail" : "", "member" : "zio.optics.OpticTypesModule.Optional", "link" : "zio\/optics\/OpticTypesModule.html#Optional", "kind" : "object"}, {"label" : "Lens", "tail" : "", "member" : "zio.optics.OpticTypesModule.Lens", "link" : "zio\/optics\/OpticTypesModule.html#Lens", "kind" : "object"}, {"label" : "Iso", "tail" : "", "member" : "zio.optics.OpticTypesModule.Iso", "link" : "zio\/optics\/OpticTypesModule.html#Iso", "kind" : "object"}, {"label" : "Optic", "tail" : "", "member" : "zio.optics.OpticModule.Optic", "link" : "zio\/optics\/OpticModule.html#Optic", "kind" : "object"}, {"label" : "Optic", "tail" : "", "member" : "zio.optics.OpticModule.Optic", "link" : "zio\/optics\/OpticModule.html#Optic[-GetWhole,-SetWholeBefore,-SetPiece,+GetError,+SetError,+GetPiece,+SetWholeAfter]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "OpticFailure", "tail" : "", "member" : "zio.optics.OpticFailureModule.OpticFailure", "link" : "zio\/optics\/OpticFailureModule.html#OpticFailureextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "LowPriorityOpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#LowPriorityOpticComposeextendsAnyRef", "kind" : "trait"}, {"label" : "OpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.OpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#OpticCompose", "kind" : "object"}, {"label" : "OpticCompose", "tail" : "", "member" : "zio.optics.OpticComposeModule.OpticCompose", "link" : "zio\/optics\/OpticComposeModule.html#OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,SetWholeBefore2,GetError,SetError,SetError1,GetPiece]extendsAnyRef", "kind" : "trait"}, {"label" : "OpticSyntax", "tail" : "", "member" : "zio.optics.Optics.OpticSyntax", "link" : "zio\/optics\/Optics.html#OpticSyntax[Whole]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "TraversalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.TraversalPartiallyApplied", "link" : "zio\/optics\/Optics.html#TraversalPartiallyApplied[+S,A]=OpticTypesModule.this.ZTraversalPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "PrismPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.PrismPartiallyApplied", "link" : "zio\/optics\/Optics.html#PrismPartiallyApplied[+S,A]=OpticTypesModule.this.ZPrismPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "OptionalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.OptionalPartiallyApplied", "link" : "zio\/optics\/Optics.html#OptionalPartiallyApplied[+S,A]=OpticTypesModule.this.ZOptionalPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "LensPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.LensPartiallyApplied", "link" : "zio\/optics\/Optics.html#LensPartiallyApplied[+S,A]=OpticTypesModule.this.ZLensPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "IsoPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.IsoPartiallyApplied", "link" : "zio\/optics\/Optics.html#IsoPartiallyApplied[+S,A]=OpticTypesModule.this.ZIsoPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "ZTraversalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversalPartiallyApplied", "link" : "zio\/optics\/Optics.html#ZTraversalPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZTraversal[Any,S,A,B]", "kind" : "type"}, {"label" : "ZPrismPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrismPartiallyApplied", "link" : "zio\/optics\/Optics.html#ZPrismPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZPrism[Any,S,A,B]", "kind" : "type"}, {"label" : "ZOptionalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptionalPartiallyApplied", "link" : "zio\/optics\/Optics.html#ZOptionalPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZOptional[Any,S,A,B]", "kind" : "type"}, {"label" : "ZLensPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLensPartiallyApplied", "link" : "zio\/optics\/Optics.html#ZLensPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZLens[Any,S,A,B]", "kind" : "type"}, {"label" : "ZIsoPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIsoPartiallyApplied", "link" : "zio\/optics\/Optics.html#ZIsoPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZIso[Any,S,A,B]", "kind" : "type"}, {"label" : "OpticPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.OpticPartiallyApplied", "link" : "zio\/optics\/Optics.html#OpticPartiallyApplied[-SetPiece,+GetError,+SetError,+GetPiece,+SetWhole]=OpticTypesModule.this.Optic[Any,Any,SetPiece,GetError,SetError,GetPiece,SetWhole]", "kind" : "type"}, {"label" : "EOptic", "tail" : "", "member" : "zio.optics.OpticTypesModule.EOptic", "link" : "zio\/optics\/Optics.html#EOptic[-GetWhole,-SetWholeBefore,-SetPiece,+Error,+GetPiece,+SetWholeAfter]=OpticTypesModule.this.Optic[GetWhole,SetWholeBefore,SetPiece,Error,Error,GetPiece,SetWholeAfter]", "kind" : "type"}, {"label" : "Setter", "tail" : "", "member" : "zio.optics.OpticTypesModule.Setter", "link" : "zio\/optics\/Optics.html#Setter[S,-A]=OpticTypesModule.this.ZSetter[S,S,A]", "kind" : "type"}, {"label" : "ZSetter", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZSetter", "link" : "zio\/optics\/Optics.html#ZSetter[-S,+T,-A]=OpticTypesModule.this.Optic[Nothing,S,A,Any,OpticTypesModule.this.OpticFailure,Any,T]", "kind" : "type"}, {"label" : "Getter", "tail" : "", "member" : "zio.optics.OpticTypesModule.Getter", "link" : "zio\/optics\/Optics.html#Getter[-S,+A]=OpticTypesModule.this.Optic[S,Nothing,Nothing,OpticTypesModule.this.OpticFailure,Any,A,Any]", "kind" : "type"}, {"label" : "Fold", "tail" : "", "member" : "zio.optics.OpticTypesModule.Fold", "link" : "zio\/optics\/Optics.html#Fold[-S,+A]=OpticTypesModule.this.Optic[S,Nothing,Nothing,OpticTypesModule.this.OpticFailure,Any,zio.Chunk[A],Any]", "kind" : "type"}, {"label" : "Traversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.Traversal", "link" : "zio\/optics\/Optics.html#Traversal[S,A]=OpticTypesModule.this.ZTraversal[S,S,A,A]", "kind" : "type"}, {"label" : "Prism", "tail" : "", "member" : "zio.optics.OpticTypesModule.Prism", "link" : "zio\/optics\/Optics.html#Prism[S,A]=OpticTypesModule.this.ZPrism[S,S,A,A]", "kind" : "type"}, {"label" : "Optional", "tail" : "", "member" : "zio.optics.OpticTypesModule.Optional", "link" : "zio\/optics\/Optics.html#Optional[S,A]=OpticTypesModule.this.ZOptional[S,S,A,A]", "kind" : "type"}, {"label" : "Lens", "tail" : "", "member" : "zio.optics.OpticTypesModule.Lens", "link" : "zio\/optics\/Optics.html#Lens[S,A]=OpticTypesModule.this.ZLens[S,S,A,A]", "kind" : "type"}, {"label" : "Iso", "tail" : "", "member" : "zio.optics.OpticTypesModule.Iso", "link" : "zio\/optics\/Optics.html#Iso[S,A]=OpticTypesModule.this.ZIso[S,S,A,A]", "kind" : "type"}, {"label" : "ZTraversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversal", "link" : "zio\/optics\/Optics.html#ZTraversal[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,zio.Chunk[B],OpticTypesModule.this.OpticFailure,OpticTypesModule.this.OpticFailure,zio.Chunk[A],T]", "kind" : "type"}, {"label" : "ZPrism", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrism", "link" : "zio\/optics\/Optics.html#ZPrism[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,Any,B,OpticTypesModule.this.OpticFailure,Nothing,A,T]", "kind" : "type"}, {"label" : "ZOptional", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptional", "link" : "zio\/optics\/Optics.html#ZOptional[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,B,OpticTypesModule.this.OpticFailure,OpticTypesModule.this.OpticFailure,A,T]", "kind" : "type"}, {"label" : "ZLens", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLens", "link" : "zio\/optics\/Optics.html#ZLens[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,B,Nothing,Nothing,A,T]", "kind" : "type"}, {"label" : "ZIso", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIso", "link" : "zio\/optics\/Optics.html#ZIso[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,Any,B,Nothing,Nothing,A,T]", "kind" : "type"}, {"label" : "zipWith", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E, B])(f: (A, B) => C): OpticResult[E, C]", "member" : "zio.optics.OpticResultModule.zipWith", "link" : "zio\/optics\/Optics.html#zipWith[E,A,B,C](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E,B])(f:(A,B)=>C):OpticResultModule.this.OpticResult[E,C]", "kind" : "final def"}, {"label" : "zip", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E, B]): OpticResult[E, (A, B)]", "member" : "zio.optics.OpticResultModule.zip", "link" : "zio\/optics\/Optics.html#zip[E,A,B](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,(A,B)]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(left: => OpticResult[E, A], right: => OpticResult[E2, A]): OpticResult[E2, A]", "member" : "zio.optics.OpticResultModule.orElse", "link" : "zio\/optics\/Optics.html#orElse[E,E2,A](left:=>OpticResultModule.this.OpticResult[E,A],right:=>OpticResultModule.this.OpticResult[E2,A]):OpticResultModule.this.OpticResult[E2,A]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(opticResult: OpticResult[E, A])(f: (E) => E2): OpticResult[E2, A]", "member" : "zio.optics.OpticResultModule.mapError", "link" : "zio\/optics\/Optics.html#mapError[E,E2,A](opticResult:OpticResultModule.this.OpticResult[E,A])(f:E=>E2):OpticResultModule.this.OpticResult[E2,A]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(iterable: Iterable[A])(f: (A) => OpticResult[E, B]): OpticResult[E, Chunk[B]]", "member" : "zio.optics.OpticResultModule.foreach", "link" : "zio\/optics\/Optics.html#foreach[E,A,B](iterable:Iterable[A])(f:A=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,zio.Chunk[B]]", "kind" : "final def"}, {"label" : "collectAllSuccesses", "tail" : "(iterable: Iterable[OpticResult[E, A]]): OpticResult[Nothing, Chunk[A]]", "member" : "zio.optics.OpticResultModule.collectAllSuccesses", "link" : "zio\/optics\/Optics.html#collectAllSuccesses[E,A](iterable:Iterable[OpticResultModule.this.OpticResult[E,A]]):OpticResultModule.this.OpticResult[Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/Optics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/Optics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/Optics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/Optics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/Optics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/Optics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/Optics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/Optics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/Optics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/Optics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/Optics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/Optics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/Optics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/Optics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/Optics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/Optics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "succeed", "tail" : "(a: A): OpticResult[Nothing, A]", "member" : "zio.optics.OpticResultModule.succeed", "link" : "zio\/optics\/Optics.html#succeed[A](a:A):OpticResultModule.this.OpticResult[Nothing,A]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(opticResult: OpticResult[E, A])(f: (A) => B): OpticResult[E, B]", "member" : "zio.optics.OpticResultModule.map", "link" : "zio\/optics\/Optics.html#map[E,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:A=>B):OpticResultModule.this.OpticResult[E,B]", "kind" : "abstract def"}, {"label" : "foldM", "tail" : "(opticResult: OpticResult[E, A])(f: (E) => OpticResult[E2, B], g: (A) => OpticResult[E2, B]): OpticResult[E2, B]", "member" : "zio.optics.OpticResultModule.foldM", "link" : "zio\/optics\/Optics.html#foldM[E,E2,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:E=>OpticResultModule.this.OpticResult[E2,B],g:A=>OpticResultModule.this.OpticResult[E2,B]):OpticResultModule.this.OpticResult[E2,B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(opticResult: OpticResult[E, A])(f: (A) => OpticResult[E, B]): OpticResult[E, B]", "member" : "zio.optics.OpticResultModule.flatMap", "link" : "zio\/optics\/Optics.html#flatMap[E,A,B](opticResult:OpticResultModule.this.OpticResult[E,A])(f:A=>OpticResultModule.this.OpticResult[E,B]):OpticResultModule.this.OpticResult[E,B]", "kind" : "abstract def"}, {"label" : "fail", "tail" : "(e: E): OpticResult[E, Nothing]", "member" : "zio.optics.OpticResultModule.fail", "link" : "zio\/optics\/Optics.html#fail[E](e:E):OpticResultModule.this.OpticResult[E,Nothing]", "kind" : "abstract def"}, {"member" : "zio.optics.OpticResultModule.OpticResult", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.optics.Optics.OpticSyntax", "shortDescription" : "Provides implicit syntax for working with any value as a partiallyapplied optic.", "members_class" : [{"label" : "optic", "tail" : "(): Optics.OpticPartiallyApplied[Whole, Nothing, Nothing, Whole, Whole]", "member" : "zio.optics.Optics.OpticSyntax.optic", "link" : "zio\/optics\/Optics$OpticSyntax.html#optic:Optics.this.OpticPartiallyApplied[Whole,Nothing,Nothing,Whole,Whole]", "kind" : "def"}, {"member" : "zio.optics.Optics.OpticSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/Optics$OpticSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/Optics$OpticSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/Optics$OpticSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/Optics$OpticSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/Optics$OpticSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/Optics$OpticSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/Optics$OpticSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics$OpticSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics$OpticSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/Optics$OpticSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/Optics$OpticSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/Optics$OpticSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/Optics$OpticSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/Optics$OpticSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/Optics$OpticSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/Optics$OpticSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/Optics$OpticSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/Optics$OpticSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/Optics$OpticSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/Optics$OpticSyntax.html", "kind" : "class"}, {"name" : "zio.optics.OpticTypesModule", "trait" : "zio\/optics\/OpticTypesModule.html", "kind" : "trait", "members_trait" : [{"label" : "ZTraversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversal", "link" : "zio\/optics\/OpticTypesModule.html#ZTraversal", "kind" : "object"}, {"label" : "ZPrism", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrism", "link" : "zio\/optics\/OpticTypesModule.html#ZPrism", "kind" : "object"}, {"label" : "ZOptional", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptional", "link" : "zio\/optics\/OpticTypesModule.html#ZOptional", "kind" : "object"}, {"label" : "ZLens", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLens", "link" : "zio\/optics\/OpticTypesModule.html#ZLens", "kind" : "object"}, {"label" : "ZIso", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIso", "link" : "zio\/optics\/OpticTypesModule.html#ZIso", "kind" : "object"}, {"label" : "Traversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.Traversal", "link" : "zio\/optics\/OpticTypesModule.html#Traversal", "kind" : "object"}, {"label" : "Prism", "tail" : "", "member" : "zio.optics.OpticTypesModule.Prism", "link" : "zio\/optics\/OpticTypesModule.html#Prism", "kind" : "object"}, {"label" : "Optional", "tail" : "", "member" : "zio.optics.OpticTypesModule.Optional", "link" : "zio\/optics\/OpticTypesModule.html#Optional", "kind" : "object"}, {"label" : "Lens", "tail" : "", "member" : "zio.optics.OpticTypesModule.Lens", "link" : "zio\/optics\/OpticTypesModule.html#Lens", "kind" : "object"}, {"label" : "Iso", "tail" : "", "member" : "zio.optics.OpticTypesModule.Iso", "link" : "zio\/optics\/OpticTypesModule.html#Iso", "kind" : "object"}, {"label" : "TraversalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.TraversalPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#TraversalPartiallyApplied[+S,A]=OpticTypesModule.this.ZTraversalPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "PrismPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.PrismPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#PrismPartiallyApplied[+S,A]=OpticTypesModule.this.ZPrismPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "OptionalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.OptionalPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#OptionalPartiallyApplied[+S,A]=OpticTypesModule.this.ZOptionalPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "LensPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.LensPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#LensPartiallyApplied[+S,A]=OpticTypesModule.this.ZLensPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "IsoPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.IsoPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#IsoPartiallyApplied[+S,A]=OpticTypesModule.this.ZIsoPartiallyApplied[S,A,A]", "kind" : "type"}, {"label" : "ZTraversalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversalPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#ZTraversalPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZTraversal[Any,S,A,B]", "kind" : "type"}, {"label" : "ZPrismPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrismPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#ZPrismPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZPrism[Any,S,A,B]", "kind" : "type"}, {"label" : "ZOptionalPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptionalPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#ZOptionalPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZOptional[Any,S,A,B]", "kind" : "type"}, {"label" : "ZLensPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLensPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#ZLensPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZLens[Any,S,A,B]", "kind" : "type"}, {"label" : "ZIsoPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIsoPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#ZIsoPartiallyApplied[+S,+A,-B]=OpticTypesModule.this.ZIso[Any,S,A,B]", "kind" : "type"}, {"label" : "OpticPartiallyApplied", "tail" : "", "member" : "zio.optics.OpticTypesModule.OpticPartiallyApplied", "link" : "zio\/optics\/OpticTypesModule.html#OpticPartiallyApplied[-SetPiece,+GetError,+SetError,+GetPiece,+SetWhole]=OpticTypesModule.this.Optic[Any,Any,SetPiece,GetError,SetError,GetPiece,SetWhole]", "kind" : "type"}, {"label" : "EOptic", "tail" : "", "member" : "zio.optics.OpticTypesModule.EOptic", "link" : "zio\/optics\/OpticTypesModule.html#EOptic[-GetWhole,-SetWholeBefore,-SetPiece,+Error,+GetPiece,+SetWholeAfter]=OpticTypesModule.this.Optic[GetWhole,SetWholeBefore,SetPiece,Error,Error,GetPiece,SetWholeAfter]", "kind" : "type"}, {"label" : "Setter", "tail" : "", "member" : "zio.optics.OpticTypesModule.Setter", "link" : "zio\/optics\/OpticTypesModule.html#Setter[S,-A]=OpticTypesModule.this.ZSetter[S,S,A]", "kind" : "type"}, {"label" : "ZSetter", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZSetter", "link" : "zio\/optics\/OpticTypesModule.html#ZSetter[-S,+T,-A]=OpticTypesModule.this.Optic[Nothing,S,A,Any,OpticTypesModule.this.OpticFailure,Any,T]", "kind" : "type"}, {"label" : "Getter", "tail" : "", "member" : "zio.optics.OpticTypesModule.Getter", "link" : "zio\/optics\/OpticTypesModule.html#Getter[-S,+A]=OpticTypesModule.this.Optic[S,Nothing,Nothing,OpticTypesModule.this.OpticFailure,Any,A,Any]", "kind" : "type"}, {"label" : "Fold", "tail" : "", "member" : "zio.optics.OpticTypesModule.Fold", "link" : "zio\/optics\/OpticTypesModule.html#Fold[-S,+A]=OpticTypesModule.this.Optic[S,Nothing,Nothing,OpticTypesModule.this.OpticFailure,Any,zio.Chunk[A],Any]", "kind" : "type"}, {"label" : "Traversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.Traversal", "link" : "zio\/optics\/OpticTypesModule.html#Traversal[S,A]=OpticTypesModule.this.ZTraversal[S,S,A,A]", "kind" : "type"}, {"label" : "Prism", "tail" : "", "member" : "zio.optics.OpticTypesModule.Prism", "link" : "zio\/optics\/OpticTypesModule.html#Prism[S,A]=OpticTypesModule.this.ZPrism[S,S,A,A]", "kind" : "type"}, {"label" : "Optional", "tail" : "", "member" : "zio.optics.OpticTypesModule.Optional", "link" : "zio\/optics\/OpticTypesModule.html#Optional[S,A]=OpticTypesModule.this.ZOptional[S,S,A,A]", "kind" : "type"}, {"label" : "Lens", "tail" : "", "member" : "zio.optics.OpticTypesModule.Lens", "link" : "zio\/optics\/OpticTypesModule.html#Lens[S,A]=OpticTypesModule.this.ZLens[S,S,A,A]", "kind" : "type"}, {"label" : "Iso", "tail" : "", "member" : "zio.optics.OpticTypesModule.Iso", "link" : "zio\/optics\/OpticTypesModule.html#Iso[S,A]=OpticTypesModule.this.ZIso[S,S,A,A]", "kind" : "type"}, {"label" : "ZTraversal", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZTraversal", "link" : "zio\/optics\/OpticTypesModule.html#ZTraversal[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,zio.Chunk[B],OpticTypesModule.this.OpticFailure,OpticTypesModule.this.OpticFailure,zio.Chunk[A],T]", "kind" : "type"}, {"label" : "ZPrism", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZPrism", "link" : "zio\/optics\/OpticTypesModule.html#ZPrism[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,Any,B,OpticTypesModule.this.OpticFailure,Nothing,A,T]", "kind" : "type"}, {"label" : "ZOptional", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZOptional", "link" : "zio\/optics\/OpticTypesModule.html#ZOptional[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,B,OpticTypesModule.this.OpticFailure,OpticTypesModule.this.OpticFailure,A,T]", "kind" : "type"}, {"label" : "ZLens", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZLens", "link" : "zio\/optics\/OpticTypesModule.html#ZLens[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,S,B,Nothing,Nothing,A,T]", "kind" : "type"}, {"label" : "ZIso", "tail" : "", "member" : "zio.optics.OpticTypesModule.ZIso", "link" : "zio\/optics\/OpticTypesModule.html#ZIso[-S,+T,+A,-B]=OpticTypesModule.this.Optic[S,Any,B,Nothing,Nothing,A,T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticTypesModule.Iso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Iso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.Iso.identity", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.Iso.apply", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Iso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Lens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Lens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), B]", "member" : "zio.optics.OpticTypesModule.Lens.second", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#second[A,B]:OpticTypesModule.this.Lens[(A,B),B]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), A]", "member" : "zio.optics.OpticTypesModule.Lens.first", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#first[A,B]:OpticTypesModule.this.Lens[(A,B),A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Lens[S, A]", "member" : "zio.optics.OpticTypesModule.Lens.apply", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>(S=>OpticTypesModule.this.OpticResult[Nothing,S])):OpticTypesModule.this.Lens[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Lens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Optional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Optional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.Optional.tail", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.Optional.key", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.head", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.at", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Optional[S, A]", "member" : "zio.optics.OpticTypesModule.Optional.apply", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Optional[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Optional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Prism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Prism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], A]", "member" : "zio.optics.OpticTypesModule.Prism.some", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#some[A]:OpticTypesModule.this.Prism[Option[A],A]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], B]", "member" : "zio.optics.OpticTypesModule.Prism.right", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#right[A,B]:OpticTypesModule.this.Prism[Either[A,B],B]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.Prism.none", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], A]", "member" : "zio.optics.OpticTypesModule.Prism.left", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#left[A,B]:OpticTypesModule.this.Prism[Either[A,B],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#Prism[List[A], (A, List[A])]", "member" : "zio.optics.OpticTypesModule.Prism.cons", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#cons[A,B]:OpticTypesModule.this.Prism[List[A],(A,List[A])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Prism[S, A]", "member" : "zio.optics.OpticTypesModule.Prism.apply", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Prism[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Prism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Traversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Traversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.slice", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.filter", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, Chunk[A]], set: (Chunk[A]) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Traversal[S, A]", "member" : "zio.optics.OpticTypesModule.Traversal.apply", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,zio.Chunk[A]],set:zio.Chunk[A]=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Traversal[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZIso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZIso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.ZIso.identity", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.ZIso.apply", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZLens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZLens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticTypesModule.ZLens.second", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#second[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticTypesModule.ZLens.first", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#first[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZLens[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZLens.apply", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:B=>(S=>OpticTypesModule.this.OpticResult[Nothing,T])):OpticTypesModule.this.ZLens[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZOptional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZOptional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.ZOptional.tail", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.ZOptional.key", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.head", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.at", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZOptional[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZOptional.apply", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZOptional[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZPrism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZPrism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.some", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#some[A,B]:OpticTypesModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.right", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#right[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.ZPrism.none", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.left", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#left[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticTypesModule.ZPrism.cons", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#cons[A,B]:OpticTypesModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZPrism[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.apply", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>OpticTypesModule.this.OpticResult[Nothing,T]):OpticTypesModule.this.ZPrism[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZTraversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZTraversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.slice", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.filter", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), Chunk[A]], set: (Chunk[B]) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZTraversal[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZTraversal.apply", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),zio.Chunk[A]],set:zio.Chunk[B]=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZTraversal[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.RightZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Right case of an Either ina ZRef.", "members_class" : [{"label" : "right", "tail" : "(): ZRef[EA, EB, C, B]", "member" : "zio.optics.RightZRefSyntax.right", "link" : "zio\/optics\/package$$RightZRefSyntax.html#right:zio.ZRef[EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.RightZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$RightZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$RightZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$RightZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$RightZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$RightZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$RightZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$RightZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$RightZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$RightZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$RightZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$RightZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$RightZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$RightZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$RightZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$RightZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$RightZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$RightZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$RightZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$RightZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$RightZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.SecondZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the second element of a tuple in aZRef.", "members_class" : [{"label" : "second", "tail" : "(): ZRef[EA, EB, C, B]", "member" : "zio.optics.SecondZRefSyntax.second", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#second:zio.ZRef[EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.SecondZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$SecondZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$SecondZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$SecondZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.SliceZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing a slice of a chunk in a ZRef.", "members_class" : [{"label" : "slice", "tail" : "(from: Int, until: Int): ZRef[EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.SliceZRefSyntax.slice", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#slice(from:Int,until:Int):zio.ZRef[EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.SliceZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$SliceZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$SliceZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$SliceZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.SomeZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Some case of an Option in aZRef.", "members_class" : [{"label" : "some", "tail" : "(): ZRef[EA, EB, B, A]", "member" : "zio.optics.SomeZRefSyntax.some", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#some:zio.ZRef[EA,EB,B,A]", "kind" : "def"}, {"member" : "zio.optics.SomeZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$SomeZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$SomeZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$SomeZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.TailZRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the tail of a list in a ZRef.", "members_class" : [{"label" : "tail", "tail" : "(): ZRef[EA, EB, List[A], List[A]]", "member" : "zio.optics.TailZRefSyntax.tail", "link" : "zio\/optics\/package$$TailZRefSyntax.html#tail:zio.ZRef[EA,EB,List[A],List[A]]", "kind" : "def"}, {"member" : "zio.optics.TailZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$TailZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$TailZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$TailZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$TailZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$TailZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$TailZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$TailZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$TailZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$TailZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$TailZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$TailZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$TailZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$TailZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$TailZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$TailZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$TailZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$TailZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$TailZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$TailZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$TailZRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.ZRefSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZRef.", "members_class" : [{"label" : "accessCase", "tail" : "(optic: optics.Optic[B, Any, C, ED, EC, D, A]): ZRef[EC, ED, C, D]", "member" : "zio.optics.ZRefSyntax.accessCase", "link" : "zio\/optics\/package$$ZRefSyntax.html#accessCase[EC>:EA,ED>:EB,C,D](optic:zio.optics.package.Optic[B,Any,C,ED,EC,D,A]):zio.ZRef[EC,ED,C,D]", "kind" : "final def"}, {"member" : "zio.optics.ZRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/package$$ZRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/package$$ZRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/package$$ZRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/package$$ZRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/package$$ZRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/package$$ZRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/package$$ZRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ZRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ZRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/package$$ZRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/package$$ZRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/package$$ZRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/package$$ZRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/package$$ZRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/package$$ZRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/package$$ZRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/package$$ZRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/package$$ZRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/package$$ZRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/package$$ZRefSyntax.html", "kind" : "class"}], "zio.optics.opticsm" : [{"name" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose", "trait" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticComposeModule.OpticCompose", "object" : "zio\/optics\/OpticComposeModule$OpticCompose$.html", "members_object" : [{"label" : "prismCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, Any, SetWholeBefore, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.OpticCompose.prismCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#prismCompose[GetWhole<:SetWholeBefore,SetWholeBefore,GetError,SetError<:SetError1,SetError1,GetPiece]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,Any,SetWholeBefore,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/optics\/OpticComposeModule$OpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compose", "tail" : "(left: (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore, SetPiece, GetError, SetError, GetPiece, SetWholeAfter], right: (OpticComposeModule.this)#Optic[GetPiece, SetWholeBefore1, SetPiece1, GetError1, SetError1, GetPiece1, SetPiece]): (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore2, SetPiece1, GetError1, SetError1, GetPiece1, SetWholeAfter]", "member" : "zio.optics.OpticComposeModule.OpticCompose.compose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#compose[SetPiece,SetPiece1,GetError1>:GetError,GetPiece1,SetWholeAfter](left:OpticComposeModule.this.Optic[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter],right:OpticComposeModule.this.Optic[GetPiece,SetWholeBefore1,SetPiece1,GetError1,SetError1,GetPiece1,SetPiece]):OpticComposeModule.this.Optic[GetWhole,SetWholeBefore2,SetPiece1,GetError1,SetError1,GetPiece1,SetWholeAfter]", "kind" : "abstract def"}], "shortDescription" : "OpticCompose abstracts over the different ways that optics can becomposed together, allowing all optics to be composed with a singleoperator."}, {"name" : "zio.optics.OpticFailureModule.OpticFailure", "shortDescription" : "An OpticFailure describes how getting or setting a piece of a wholeusing an optic failed.", "members_case class" : [{"member" : "zio.optics.OpticFailureModule.OpticFailure#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "zio.optics.OpticFailureModule.OpticFailure.message", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticFailureModule$OpticFailure.html", "kind" : "case class"}, {"name" : "zio.optics.OpticModule.Optic", "shortDescription" : "An Optic is able to get and set a piece of a whole, possibly failing.", "object" : "zio\/optics\/OpticModule$Optic$.html", "members_object" : [{"label" : "TailPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.TailPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#TailPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SomePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SomePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SomePartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SlicePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SlicePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SlicePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SecondPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SecondPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SecondPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "RightPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.RightPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#RightPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "NonePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.NonePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#NonePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError,Piece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LeftPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LeftPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LeftPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "KeyPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.KeyPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#KeyPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Key,Value,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "HeadPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.HeadPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#HeadPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FirstPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FirstPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FirstPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FilterPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FilterPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FilterPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ConsPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ConsPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ConsPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "AtPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.AtPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#AtPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PariallyAppliedOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PariallyAppliedOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PariallyAppliedOpticSyntax[SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ForEachSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ForEachSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ForEachSyntax[GetWhole,SetWholeBefore<:GetWhole,SetPiece,GetError>:SetError,SetError,SetError1>:GetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ComposeSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ComposeSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ComposeSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PrismSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PrismSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PrismSyntax[GetWhole,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LensSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LensSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LensSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "IsoSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.IsoSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#IsoSyntax[Whole,Piece]extendsAnyRef", "kind" : "implicit class"}, {"label" : "EOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.EOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#EOpticSyntax[GetWhole,SetWholeBefore,SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "tail", "tail" : "(): (OpticModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticModule.Optic.tail", "link" : "zio\/optics\/OpticModule$Optic$.html#tail[A]:OpticModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "some", "tail" : "(): (OpticModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticModule.Optic.some", "link" : "zio\/optics\/OpticModule$Optic$.html#some[A,B]:OpticModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.slice", "link" : "zio\/optics\/OpticModule$Optic$.html#slice[A](from:Int,until:Int):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "second", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticModule.Optic.second", "link" : "zio\/optics\/OpticModule$Optic$.html#second[A,B,C]:OpticModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticModule.Optic.right", "link" : "zio\/optics\/OpticModule$Optic$.html#right[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticModule.Optic.none", "link" : "zio\/optics\/OpticModule$Optic$.html#none[A]:OpticModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticModule.Optic.left", "link" : "zio\/optics\/OpticModule$Optic$.html#left[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticModule.Optic.key", "link" : "zio\/optics\/OpticModule$Optic$.html#key[K,V](k:K):OpticModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "identity", "tail" : "(): (OpticModule.this)#Iso[A, A]", "member" : "zio.optics.OpticModule.Optic.identity", "link" : "zio\/optics\/OpticModule$Optic$.html#identity[A]:OpticModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticModule.Optic.head", "link" : "zio\/optics\/OpticModule$Optic$.html#head[A]:OpticModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticModule.Optic.first", "link" : "zio\/optics\/OpticModule$Optic$.html#first[A,B,C]:OpticModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.filter", "link" : "zio\/optics\/OpticModule$Optic$.html#filter[A](f:A=>Boolean):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticModule.Optic.cons", "link" : "zio\/optics\/OpticModule$Optic$.html#cons[A,B]:OpticModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.at", "link" : "zio\/optics\/OpticModule$Optic$.html#at[A](n:Int):OpticModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticModule$Optic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticModule$Optic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticModule$Optic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zip", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.zip", "link" : "zio\/optics\/OpticModule$Optic.html#zip[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.orElse", "link" : "zio\/optics\/OpticModule$Optic.html#orElse[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "get", "tail" : "(whole: GetWhole): (OpticModule.this)#OpticResult[GetError, GetPiece]", "member" : "zio.optics.OpticModule.Optic.get", "link" : "zio\/optics\/OpticModule$Optic.html#get(whole:GetWhole):OpticModule.this.OpticResult[GetError,GetPiece]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<>", "link" : "zio\/optics\/OpticModule$Optic.html#<>[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<*>", "link" : "zio\/optics\/OpticModule$Optic.html#<*>[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "apply", "tail" : "(whole: GetWhole with SetWholeBefore): (OpticModule.this)#OpticPartiallyApplied[SetPiece, GetError, SetError, GetPiece, SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.apply", "link" : "zio\/optics\/OpticModule$Optic.html#apply(whole:GetWholewithSetWholeBefore):OpticModule.this.OpticPartiallyApplied[SetPiece,GetError,SetError,GetPiece,SetWholeAfter]", "kind" : "final def"}, {"member" : "zio.optics.OpticModule.Optic#<init>", "error" : "unsupported entity"}, {"label" : "setOptic", "tail" : ": (SetPiece) => (SetWholeBefore) => (OpticModule.this)#OpticResult[(SetError, SetWholeAfter), SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.setOptic", "link" : "zio\/optics\/OpticModule$Optic.html#setOptic:SetPiece=>(SetWholeBefore=>OpticModule.this.OpticResult[(SetError,SetWholeAfter),SetWholeAfter])", "kind" : "val"}, {"label" : "getOptic", "tail" : ": (GetWhole) => (OpticModule.this)#OpticResult[(GetError, SetWholeAfter), GetPiece]", "member" : "zio.optics.OpticModule.Optic.getOptic", "link" : "zio\/optics\/OpticModule$Optic.html#getOptic:GetWhole=>OpticModule.this.OpticResult[(GetError,SetWholeAfter),GetPiece]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticModule$Optic.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticModule$Optic.html", "kind" : "case class"}, {"name" : "zio.optics.opticsm.AtZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the specified index of a chunk in aZRefM.", "members_class" : [{"label" : "at", "tail" : "(n: Int): ZRefM[RA with RB, RB, EA, EB, A, A]", "member" : "zio.optics.opticsm.AtZRefMSyntax.at", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#at(n:Int):zio.ZRefM[RAwithRB,RB,EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.opticsm.AtZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$AtZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.ConsZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the :: case of a List in aZRefM.", "members_class" : [{"label" : "cons", "tail" : "(): ZRefM[RA, RB, EA, EB, (A, List[A]), (A, List[A])]", "member" : "zio.optics.opticsm.ConsZRefMSyntax.cons", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#cons:zio.ZRefM[RA,RB,EA,EB,(A,List[A]),(A,List[A])]", "kind" : "def"}, {"member" : "zio.optics.opticsm.ConsZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$ConsZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.ERefMSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZRefMwhen the error types are unified.", "members_class" : [{"label" : "accessField", "tail" : "(optic: opticsm.Optic[B, B, C, ED, EC, D, A]): ZRefM[RA with RB, RB, EC, ED, C, D]", "member" : "zio.optics.opticsm.ERefMSyntax.accessField", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#accessField[EC>:EA,ED>:EB,C,D](optic:zio.optics.opticsm.package.Optic[B,B,C,ED,EC,D,A]):zio.ZRefM[RAwithRB,RB,EC,ED,C,D]", "kind" : "def"}, {"label" : "accessElements", "tail" : "(optic: opticsm.Optic[B, B, Chunk[C], ED, EC, Chunk[D], A]): ZRefM[RA with RB, RB, EC, ED, Chunk[C], Chunk[D]]", "member" : "zio.optics.opticsm.ERefMSyntax.accessElements", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#accessElements[EC>:EA,ED>:EB,C,D](optic:zio.optics.opticsm.package.Optic[B,B,zio.Chunk[C],ED,EC,zio.Chunk[D],A]):zio.ZRefM[RAwithRB,RB,EC,ED,zio.Chunk[C],zio.Chunk[D]]", "kind" : "def"}, {"member" : "zio.optics.opticsm.ERefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$ERefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.FilterZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing a filtered subset of a chunk in aZRefM.", "members_class" : [{"label" : "filter", "tail" : "(f: (A) => Boolean): ZRefM[RA with RB, RB, EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.opticsm.FilterZRefMSyntax.filter", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#filter(f:A=>Boolean):zio.ZRefM[RAwithRB,RB,EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.opticsm.FilterZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$FilterZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.FirstZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the first element of a tuple in aZRefM.", "members_class" : [{"label" : "first", "tail" : "(): ZRefM[RA with RB, RB, EA, EB, C, A]", "member" : "zio.optics.opticsm.FirstZRefMSyntax.first", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#first:zio.ZRefM[RAwithRB,RB,EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.opticsm.FirstZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$FirstZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.HeadZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the head of a list in a ZRefM.", "members_class" : [{"label" : "head", "tail" : "(): ZRefM[RA with RB, RB, EA, EB, A, A]", "member" : "zio.optics.opticsm.HeadZRefMSyntax.head", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#head:zio.ZRefM[RAwithRB,RB,EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.opticsm.HeadZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$HeadZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.KeyZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the value at the specified key in amap in a ZRefM.", "members_class" : [{"label" : "key", "tail" : "(k: K): ZRefM[RA with RB, RB, EA, EB, V, V]", "member" : "zio.optics.opticsm.KeyZRefMSyntax.key", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#key(k:K):zio.ZRefM[RAwithRB,RB,EA,EB,V,V]", "kind" : "def"}, {"member" : "zio.optics.opticsm.KeyZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$KeyZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.LeftZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the Left case of an Either in aZRefM.", "members_class" : [{"label" : "left", "tail" : "(): ZRefM[RA, RB, EA, EB, C, A]", "member" : "zio.optics.opticsm.LeftZRefMSyntax.left", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#left:zio.ZRefM[RA,RB,EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.opticsm.LeftZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$LeftZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.NoneZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the None case of an Option in aZRefM.", "members_class" : [{"label" : "none", "tail" : "(): ZRefM[RA, RB, EA, EB, Unit, Unit]", "member" : "zio.optics.opticsm.NoneZRefMSyntax.none", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#none:zio.ZRefM[RA,RB,EA,EB,Unit,Unit]", "kind" : "def"}, {"member" : "zio.optics.opticsm.NoneZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$NoneZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.RightZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the Right case of an Either ina ZRefM.", "members_class" : [{"label" : "right", "tail" : "(): ZRefM[RA, RB, EA, EB, C, B]", "member" : "zio.optics.opticsm.RightZRefMSyntax.right", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#right:zio.ZRefM[RA,RB,EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.opticsm.RightZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$RightZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.SecondZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the second element of a tuple in aZRefM.", "members_class" : [{"label" : "second", "tail" : "(): ZRefM[RA with RB, RB, EA, EB, C, B]", "member" : "zio.optics.opticsm.SecondZRefMSyntax.second", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#second:zio.ZRefM[RAwithRB,RB,EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.opticsm.SecondZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$SecondZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.SliceZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing a slice of a chunk in a ZRefM.", "members_class" : [{"label" : "slice", "tail" : "(from: Int, until: Int): ZRefM[RA with RB, RB, EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.opticsm.SliceZRefMSyntax.slice", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#slice(from:Int,until:Int):zio.ZRefM[RAwithRB,RB,EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.opticsm.SliceZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$SliceZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.SomeZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the Some case of an Option in aZRefM.", "members_class" : [{"label" : "some", "tail" : "(): ZRefM[RA, RB, EA, EB, B, A]", "member" : "zio.optics.opticsm.SomeZRefMSyntax.some", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#some:zio.ZRefM[RA,RB,EA,EB,B,A]", "kind" : "def"}, {"member" : "zio.optics.opticsm.SomeZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$SomeZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.TailZRefMSyntax", "shortDescription" : "Provides implicit syntax for accessing the tail of a list in a ZRefM.", "members_class" : [{"label" : "tail", "tail" : "(): ZRefM[RA with RB, RB, EA, EB, List[A], List[A]]", "member" : "zio.optics.opticsm.TailZRefMSyntax.tail", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#tail:zio.ZRefM[RAwithRB,RB,EA,EB,List[A],List[A]]", "kind" : "def"}, {"member" : "zio.optics.opticsm.TailZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$TailZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.opticsm.ZRefMSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZRefM.", "members_class" : [{"label" : "accessCase", "tail" : "(optic: opticsm.Optic[B, Any, C, ED, EC, D, A]): ZRefM[RA, RB, EC, ED, C, D]", "member" : "zio.optics.opticsm.ZRefMSyntax.accessCase", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#accessCase[EC>:EA,ED>:EB,C,D](optic:zio.optics.opticsm.package.Optic[B,Any,C,ED,EC,D,A]):zio.ZRefM[RA,RB,EC,ED,C,D]", "kind" : "final def"}, {"member" : "zio.optics.opticsm.ZRefMSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/opticsm\/package$$ZRefMSyntax.html", "kind" : "class"}, {"name" : "zio.optics.OpticTypesModule.Iso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Iso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.Iso.identity", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.Iso.apply", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Iso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Lens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Lens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), B]", "member" : "zio.optics.OpticTypesModule.Lens.second", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#second[A,B]:OpticTypesModule.this.Lens[(A,B),B]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), A]", "member" : "zio.optics.OpticTypesModule.Lens.first", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#first[A,B]:OpticTypesModule.this.Lens[(A,B),A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Lens[S, A]", "member" : "zio.optics.OpticTypesModule.Lens.apply", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>(S=>OpticTypesModule.this.OpticResult[Nothing,S])):OpticTypesModule.this.Lens[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Lens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Optional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Optional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.Optional.tail", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.Optional.key", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.head", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.at", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Optional[S, A]", "member" : "zio.optics.OpticTypesModule.Optional.apply", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Optional[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Optional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Prism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Prism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], A]", "member" : "zio.optics.OpticTypesModule.Prism.some", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#some[A]:OpticTypesModule.this.Prism[Option[A],A]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], B]", "member" : "zio.optics.OpticTypesModule.Prism.right", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#right[A,B]:OpticTypesModule.this.Prism[Either[A,B],B]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.Prism.none", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], A]", "member" : "zio.optics.OpticTypesModule.Prism.left", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#left[A,B]:OpticTypesModule.this.Prism[Either[A,B],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#Prism[List[A], (A, List[A])]", "member" : "zio.optics.OpticTypesModule.Prism.cons", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#cons[A,B]:OpticTypesModule.this.Prism[List[A],(A,List[A])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Prism[S, A]", "member" : "zio.optics.OpticTypesModule.Prism.apply", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Prism[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Prism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Traversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Traversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.slice", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.filter", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, Chunk[A]], set: (Chunk[A]) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Traversal[S, A]", "member" : "zio.optics.OpticTypesModule.Traversal.apply", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,zio.Chunk[A]],set:zio.Chunk[A]=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Traversal[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZIso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZIso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.ZIso.identity", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.ZIso.apply", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZLens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZLens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticTypesModule.ZLens.second", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#second[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticTypesModule.ZLens.first", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#first[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZLens[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZLens.apply", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:B=>(S=>OpticTypesModule.this.OpticResult[Nothing,T])):OpticTypesModule.this.ZLens[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZOptional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZOptional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.ZOptional.tail", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.ZOptional.key", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.head", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.at", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZOptional[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZOptional.apply", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZOptional[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZPrism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZPrism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.some", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#some[A,B]:OpticTypesModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.right", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#right[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.ZPrism.none", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.left", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#left[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticTypesModule.ZPrism.cons", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#cons[A,B]:OpticTypesModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZPrism[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.apply", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>OpticTypesModule.this.OpticResult[Nothing,T]):OpticTypesModule.this.ZPrism[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZTraversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZTraversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.slice", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.filter", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), Chunk[A]], set: (Chunk[B]) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZTraversal[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZTraversal.apply", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),zio.Chunk[A]],set:zio.Chunk[B]=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZTraversal[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "zio.optics.toptics" : [{"name" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose", "trait" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$LowPriorityOpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.optics.OpticComposeModule.OpticCompose", "object" : "zio\/optics\/OpticComposeModule$OpticCompose$.html", "members_object" : [{"label" : "prismCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, Any, SetWholeBefore, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.OpticCompose.prismCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#prismCompose[GetWhole<:SetWholeBefore,SetWholeBefore,GetError,SetError<:SetError1,SetError1,GetPiece]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,Any,SetWholeBefore,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "lensCompose", "tail" : "(): (OpticComposeModule.this)#OpticCompose[GetWhole, SetWholeBefore, SetWholeBefore1, GetWhole, GetError, SetError, SetError1, GetPiece]", "member" : "zio.optics.OpticComposeModule.LowPriorityOpticCompose.lensCompose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#lensCompose[GetWhole<:SetWholeBefore,SetWholeBefore,SetWholeBefore1,GetPiece<:SetWholeBefore1,GetError<:SetError1,SetError<:SetError1,SetError1]:OpticComposeModule.this.OpticCompose[GetWhole,SetWholeBefore,SetWholeBefore1,GetWhole,GetError,SetError,SetError1,GetPiece]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/optics\/OpticComposeModule$OpticCompose.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compose", "tail" : "(left: (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore, SetPiece, GetError, SetError, GetPiece, SetWholeAfter], right: (OpticComposeModule.this)#Optic[GetPiece, SetWholeBefore1, SetPiece1, GetError1, SetError1, GetPiece1, SetPiece]): (OpticComposeModule.this)#Optic[GetWhole, SetWholeBefore2, SetPiece1, GetError1, SetError1, GetPiece1, SetWholeAfter]", "member" : "zio.optics.OpticComposeModule.OpticCompose.compose", "link" : "zio\/optics\/OpticComposeModule$OpticCompose.html#compose[SetPiece,SetPiece1,GetError1>:GetError,GetPiece1,SetWholeAfter](left:OpticComposeModule.this.Optic[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter],right:OpticComposeModule.this.Optic[GetPiece,SetWholeBefore1,SetPiece1,GetError1,SetError1,GetPiece1,SetPiece]):OpticComposeModule.this.Optic[GetWhole,SetWholeBefore2,SetPiece1,GetError1,SetError1,GetPiece1,SetWholeAfter]", "kind" : "abstract def"}], "shortDescription" : "OpticCompose abstracts over the different ways that optics can becomposed together, allowing all optics to be composed with a singleoperator."}, {"name" : "zio.optics.OpticFailureModule.OpticFailure", "shortDescription" : "An OpticFailure describes how getting or setting a piece of a wholeusing an optic failed.", "members_case class" : [{"member" : "zio.optics.OpticFailureModule.OpticFailure#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "zio.optics.OpticFailureModule.OpticFailure.message", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticFailureModule$OpticFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticFailureModule$OpticFailure.html", "kind" : "case class"}, {"name" : "zio.optics.OpticModule.Optic", "shortDescription" : "An Optic is able to get and set a piece of a whole, possibly failing.", "object" : "zio\/optics\/OpticModule$Optic$.html", "members_object" : [{"label" : "TailPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.TailPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#TailPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SomePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SomePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SomePartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SlicePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SlicePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SlicePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "SecondPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.SecondPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#SecondPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "RightPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.RightPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#RightPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "NonePartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.NonePartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#NonePartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError,Piece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LeftPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LeftPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LeftPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "KeyPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.KeyPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#KeyPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Key,Value,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "HeadPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.HeadPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#HeadPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FirstPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FirstPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FirstPartiallyAppliedSyntax[SetPiece,GetError,SetError>:GetError,GetPiece,Whole,Piece2]extendsAnyRef", "kind" : "implicit class"}, {"label" : "FilterPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.FilterPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#FilterPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ConsPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ConsPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ConsPartiallyAppliedSyntax[SetPiece,GetError>:OpticModule.this.OpticFailure,SetError,GetPiece,SetWhole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "AtPartiallyAppliedSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.AtPartiallyAppliedSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#AtPartiallyAppliedSyntax[GetError>:OpticModule.this.OpticFailure,SetError>:GetError,Piece,Whole]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PariallyAppliedOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PariallyAppliedOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PariallyAppliedOpticSyntax[SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ForEachSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ForEachSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ForEachSyntax[GetWhole,SetWholeBefore<:GetWhole,SetPiece,GetError>:SetError,SetError,SetError1>:GetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ComposeSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.ComposeSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#ComposeSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "PrismSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.PrismSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#PrismSyntax[GetWhole,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "LensSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.LensSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#LensSyntax[GetWhole,SetWholeBefore,SetPiece,GetError,SetError,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "IsoSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.IsoSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#IsoSyntax[Whole,Piece]extendsAnyRef", "kind" : "implicit class"}, {"label" : "EOpticSyntax", "tail" : "", "member" : "zio.optics.OpticModule.Optic.EOpticSyntax", "link" : "zio\/optics\/OpticModule$Optic$.html#EOpticSyntax[GetWhole,SetWholeBefore,SetPiece,Error,GetPiece,SetWholeAfter]extendsAnyRef", "kind" : "implicit class"}, {"label" : "tail", "tail" : "(): (OpticModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticModule.Optic.tail", "link" : "zio\/optics\/OpticModule$Optic$.html#tail[A]:OpticModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "some", "tail" : "(): (OpticModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticModule.Optic.some", "link" : "zio\/optics\/OpticModule$Optic$.html#some[A,B]:OpticModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.slice", "link" : "zio\/optics\/OpticModule$Optic$.html#slice[A](from:Int,until:Int):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "second", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticModule.Optic.second", "link" : "zio\/optics\/OpticModule$Optic$.html#second[A,B,C]:OpticModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticModule.Optic.right", "link" : "zio\/optics\/OpticModule$Optic$.html#right[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticModule.Optic.none", "link" : "zio\/optics\/OpticModule$Optic$.html#none[A]:OpticModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticModule.Optic.left", "link" : "zio\/optics\/OpticModule$Optic$.html#left[A,B,C]:OpticModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticModule.Optic.key", "link" : "zio\/optics\/OpticModule$Optic$.html#key[K,V](k:K):OpticModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "identity", "tail" : "(): (OpticModule.this)#Iso[A, A]", "member" : "zio.optics.OpticModule.Optic.identity", "link" : "zio\/optics\/OpticModule$Optic$.html#identity[A]:OpticModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticModule.Optic.head", "link" : "zio\/optics\/OpticModule$Optic$.html#head[A]:OpticModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticModule.Optic.first", "link" : "zio\/optics\/OpticModule$Optic$.html#first[A,B,C]:OpticModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.filter", "link" : "zio\/optics\/OpticModule$Optic$.html#filter[A](f:A=>Boolean):OpticModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticModule.Optic.cons", "link" : "zio\/optics\/OpticModule$Optic$.html#cons[A,B]:OpticModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticModule.Optic.at", "link" : "zio\/optics\/OpticModule$Optic$.html#at[A](n:Int):OpticModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticModule$Optic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticModule$Optic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticModule$Optic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zip", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.zip", "link" : "zio\/optics\/OpticModule$Optic.html#zip[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.orElse", "link" : "zio\/optics\/OpticModule$Optic.html#orElse[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "get", "tail" : "(whole: GetWhole): (OpticModule.this)#OpticResult[GetError, GetPiece]", "member" : "zio.optics.OpticModule.Optic.get", "link" : "zio\/optics\/OpticModule$Optic.html#get(whole:GetWhole):OpticModule.this.OpticResult[GetError,GetPiece]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece1, GetError2, SetError2, GetPiece1, SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<>", "link" : "zio\/optics\/OpticModule$Optic.html#<>[GetWhole1<:GetWhole,SetWholeBefore1<:SetWholeBefore,SetPiece1<:SetPiece,GetError2,SetError2,GetPiece1>:GetPiece,SetWholeAfter1>:SetWholeAfter](that:=>OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece1,GetError2,SetError2,GetPiece1,SetWholeAfter1]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, SetPiece2, GetError1, SetError1, GetPiece2, SetWholeAfter1]): (OpticModule.this)#Optic[GetWhole1, SetWholeBefore1, (SetPiece, SetPiece2), GetError1, SetError1, (GetPiece, GetPiece2), SetWholeAfter1]", "member" : "zio.optics.OpticModule.Optic.<*>", "link" : "zio\/optics\/OpticModule$Optic.html#<*>[GetWhole1<:GetWhole,SetWholeBefore1>:SetWholeAfter<:SetWholeBefore,SetPiece2,GetError1>:GetError,SetError1>:SetError,GetPiece2,SetWholeAfter1>:SetWholeAfter](that:OpticModule.this.Optic[GetWhole1,SetWholeBefore1,SetPiece2,GetError1,SetError1,GetPiece2,SetWholeAfter1]):OpticModule.this.Optic[GetWhole1,SetWholeBefore1,(SetPiece,SetPiece2),GetError1,SetError1,(GetPiece,GetPiece2),SetWholeAfter1]", "kind" : "final def"}, {"label" : "apply", "tail" : "(whole: GetWhole with SetWholeBefore): (OpticModule.this)#OpticPartiallyApplied[SetPiece, GetError, SetError, GetPiece, SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.apply", "link" : "zio\/optics\/OpticModule$Optic.html#apply(whole:GetWholewithSetWholeBefore):OpticModule.this.OpticPartiallyApplied[SetPiece,GetError,SetError,GetPiece,SetWholeAfter]", "kind" : "final def"}, {"member" : "zio.optics.OpticModule.Optic#<init>", "error" : "unsupported entity"}, {"label" : "setOptic", "tail" : ": (SetPiece) => (SetWholeBefore) => (OpticModule.this)#OpticResult[(SetError, SetWholeAfter), SetWholeAfter]", "member" : "zio.optics.OpticModule.Optic.setOptic", "link" : "zio\/optics\/OpticModule$Optic.html#setOptic:SetPiece=>(SetWholeBefore=>OpticModule.this.OpticResult[(SetError,SetWholeAfter),SetWholeAfter])", "kind" : "val"}, {"label" : "getOptic", "tail" : ": (GetWhole) => (OpticModule.this)#OpticResult[(GetError, SetWholeAfter), GetPiece]", "member" : "zio.optics.OpticModule.Optic.getOptic", "link" : "zio\/optics\/OpticModule$Optic.html#getOptic:GetWhole=>OpticModule.this.OpticResult[(GetError,SetWholeAfter),GetPiece]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/optics\/OpticModule$Optic.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticModule$Optic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticModule$Optic.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticModule$Optic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticModule$Optic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticModule$Optic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticModule$Optic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticModule$Optic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticModule$Optic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticModule$Optic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticModule$Optic.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticModule$Optic.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticModule$Optic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticModule$Optic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/optics\/OpticModule$Optic.html", "kind" : "case class"}, {"name" : "zio.optics.OpticTypesModule.Iso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Iso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.Iso.identity", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.Iso.apply", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Iso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Iso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Lens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Lens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), B]", "member" : "zio.optics.OpticTypesModule.Lens.second", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#second[A,B]:OpticTypesModule.this.Lens[(A,B),B]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#Lens[(A, B), A]", "member" : "zio.optics.OpticTypesModule.Lens.first", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#first[A,B]:OpticTypesModule.this.Lens[(A,B),A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Lens[S, A]", "member" : "zio.optics.OpticTypesModule.Lens.apply", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>(S=>OpticTypesModule.this.OpticResult[Nothing,S])):OpticTypesModule.this.Lens[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Lens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Optional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Optional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.Optional.tail", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.Optional.key", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.head", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Optional.at", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Optional[S, A]", "member" : "zio.optics.OpticTypesModule.Optional.apply", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Optional[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Optional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Optional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Prism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Prism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], A]", "member" : "zio.optics.OpticTypesModule.Prism.some", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#some[A]:OpticTypesModule.this.Prism[Option[A],A]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], B]", "member" : "zio.optics.OpticTypesModule.Prism.right", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#right[A,B]:OpticTypesModule.this.Prism[Either[A,B],B]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.Prism.none", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#Prism[Either[A, B], A]", "member" : "zio.optics.OpticTypesModule.Prism.left", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#left[A,B]:OpticTypesModule.this.Prism[Either[A,B],A]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#Prism[List[A], (A, List[A])]", "member" : "zio.optics.OpticTypesModule.Prism.cons", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#cons[A,B]:OpticTypesModule.this.Prism[List[A],(A,List[A])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Prism[S, A]", "member" : "zio.optics.OpticTypesModule.Prism.apply", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Prism[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Prism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.Traversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$Traversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.slice", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.Traversal.filter", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, Chunk[A]], set: (Chunk[A]) => (S) => (OpticTypesModule.this)#OpticResult[(OpticTypesModule.this)#OpticFailure, S]): (OpticTypesModule.this)#Traversal[S, A]", "member" : "zio.optics.OpticTypesModule.Traversal.apply", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,zio.Chunk[A]],set:zio.Chunk[A]=>(S=>OpticTypesModule.this.OpticResult[OpticTypesModule.this.OpticFailure,S])):OpticTypesModule.this.Traversal[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$Traversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZIso", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZIso$.html", "members_object" : [{"label" : "identity", "tail" : "(): (OpticTypesModule.this)#Iso[A, A]", "member" : "zio.optics.OpticTypesModule.ZIso.identity", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#identity[A]:OpticTypesModule.this.Iso[A,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (A) => (OpticTypesModule.this)#OpticResult[Nothing, S]): (OpticTypesModule.this)#Iso[S, A]", "member" : "zio.optics.OpticTypesModule.ZIso.apply", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#apply[S,A](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:A=>OpticTypesModule.this.OpticResult[Nothing,S]):OpticTypesModule.this.Iso[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZLens", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZLens$.html", "members_object" : [{"label" : "second", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (A, C), B, C]", "member" : "zio.optics.OpticTypesModule.ZLens.second", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#second[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(A,C),B,C]", "kind" : "def"}, {"label" : "first", "tail" : "(): (OpticTypesModule.this)#ZLens[(A, B), (C, B), A, C]", "member" : "zio.optics.OpticTypesModule.ZLens.first", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#first[A,B,C]:OpticTypesModule.this.ZLens[(A,B),(C,B),A,C]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[Nothing, A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZLens[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZLens.apply", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[Nothing,A],set:B=>(S=>OpticTypesModule.this.OpticResult[Nothing,T])):OpticTypesModule.this.ZLens[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZOptional", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZOptional$.html", "members_object" : [{"label" : "tail", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], List[A]]", "member" : "zio.optics.OpticTypesModule.ZOptional.tail", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#tail[A]:OpticTypesModule.this.Optional[List[A],List[A]]", "kind" : "def"}, {"label" : "key", "tail" : "(k: K): (OpticTypesModule.this)#Optional[Map[K, V], V]", "member" : "zio.optics.OpticTypesModule.ZOptional.key", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#key[K,V](k:K):OpticTypesModule.this.Optional[Map[K,V],V]", "kind" : "def"}, {"label" : "head", "tail" : "(): (OpticTypesModule.this)#Optional[List[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.head", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#head[A]:OpticTypesModule.this.Optional[List[A],A]", "kind" : "def"}, {"label" : "at", "tail" : "(n: Int): (OpticTypesModule.this)#Optional[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZOptional.at", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#at[A](n:Int):OpticTypesModule.this.Optional[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZOptional[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZOptional.apply", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZOptional[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZOptional$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZPrism", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZPrism$.html", "members_object" : [{"label" : "some", "tail" : "(): (OpticTypesModule.this)#ZPrism[Option[A], Option[B], A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.some", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#some[A,B]:OpticTypesModule.this.ZPrism[Option[A],Option[B],A,B]", "kind" : "def"}, {"label" : "right", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[A, C], B, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.right", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#right[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[A,C],B,C]", "kind" : "def"}, {"label" : "none", "tail" : "(): (OpticTypesModule.this)#Prism[Option[A], Unit]", "member" : "zio.optics.OpticTypesModule.ZPrism.none", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#none[A]:OpticTypesModule.this.Prism[Option[A],Unit]", "kind" : "def"}, {"label" : "left", "tail" : "(): (OpticTypesModule.this)#ZPrism[Either[A, B], Either[C, B], A, C]", "member" : "zio.optics.OpticTypesModule.ZPrism.left", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#left[A,B,C]:OpticTypesModule.this.ZPrism[Either[A,B],Either[C,B],A,C]", "kind" : "def"}, {"label" : "cons", "tail" : "(): (OpticTypesModule.this)#ZPrism[List[A], List[B], (A, List[A]), (B, List[B])]", "member" : "zio.optics.OpticTypesModule.ZPrism.cons", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#cons[A,B]:OpticTypesModule.this.ZPrism[List[A],List[B],(A,List[A]),(B,List[B])]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), A], set: (B) => (OpticTypesModule.this)#OpticResult[Nothing, T]): (OpticTypesModule.this)#ZPrism[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZPrism.apply", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),A],set:B=>OpticTypesModule.this.OpticResult[Nothing,T]):OpticTypesModule.this.ZPrism[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZPrism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.OpticTypesModule.ZTraversal", "shortDescription" : "", "object" : "zio\/optics\/OpticTypesModule$ZTraversal$.html", "members_object" : [{"label" : "slice", "tail" : "(from: Int, until: Int): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.slice", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#slice[A](from:Int,until:Int):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): (OpticTypesModule.this)#Traversal[Chunk[A], A]", "member" : "zio.optics.OpticTypesModule.ZTraversal.filter", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#filter[A](f:A=>Boolean):OpticTypesModule.this.Traversal[zio.Chunk[A],A]", "kind" : "def"}, {"label" : "apply", "tail" : "(get: (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), Chunk[A]], set: (Chunk[B]) => (S) => (OpticTypesModule.this)#OpticResult[((OpticTypesModule.this)#OpticFailure, T), T]): (OpticTypesModule.this)#ZTraversal[S, T, A, B]", "member" : "zio.optics.OpticTypesModule.ZTraversal.apply", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#apply[S,T,A,B](get:S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),zio.Chunk[A]],set:zio.Chunk[B]=>(S=>OpticTypesModule.this.OpticResult[(OpticTypesModule.this.OpticFailure,T),T])):OpticTypesModule.this.ZTraversal[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/OpticTypesModule$ZTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.toptics.AtZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the specified index of a chunk in aZTRef.", "members_class" : [{"label" : "at", "tail" : "(n: Int): ZTRef[EA, EB, A, A]", "member" : "zio.optics.toptics.AtZTRefSyntax.at", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#at(n:Int):zio.stm.ZTRef[EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.toptics.AtZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$AtZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.ConsZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the :: case of a List in aZTRef.", "members_class" : [{"label" : "cons", "tail" : "(): ZTRef[EA, EB, (A, List[A]), (A, List[A])]", "member" : "zio.optics.toptics.ConsZTRefSyntax.cons", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#cons:zio.stm.ZTRef[EA,EB,(A,List[A]),(A,List[A])]", "kind" : "def"}, {"member" : "zio.optics.toptics.ConsZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$ConsZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.ETRefSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZTRefwhen the error types are unified.", "members_class" : [{"label" : "accessField", "tail" : "(optic: toptics.Optic[B, B, C, ED, EC, D, A]): ZTRef[EC, ED, C, D]", "member" : "zio.optics.toptics.ETRefSyntax.accessField", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#accessField[EC>:EA,ED>:EB,C,D](optic:zio.optics.toptics.package.Optic[B,B,C,ED,EC,D,A]):zio.stm.ZTRef[EC,ED,C,D]", "kind" : "def"}, {"label" : "accessElements", "tail" : "(optic: toptics.Optic[B, B, Chunk[C], ED, EC, Chunk[D], A]): ZTRef[EC, ED, Chunk[C], Chunk[D]]", "member" : "zio.optics.toptics.ETRefSyntax.accessElements", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#accessElements[EC>:EA,ED>:EB,C,D](optic:zio.optics.toptics.package.Optic[B,B,zio.Chunk[C],ED,EC,zio.Chunk[D],A]):zio.stm.ZTRef[EC,ED,zio.Chunk[C],zio.Chunk[D]]", "kind" : "def"}, {"member" : "zio.optics.toptics.ETRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$ETRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$ETRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.FilterZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing a filtered subset of a chunk in aZTRef.", "members_class" : [{"label" : "filter", "tail" : "(f: (A) => Boolean): ZTRef[EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.toptics.FilterZTRefSyntax.filter", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#filter(f:A=>Boolean):zio.stm.ZTRef[EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.toptics.FilterZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$FilterZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.FirstZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the first element of a tuple in aZTRef.", "members_class" : [{"label" : "first", "tail" : "(): ZTRef[EA, EB, C, A]", "member" : "zio.optics.toptics.FirstZTRefSyntax.first", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#first:zio.stm.ZTRef[EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.toptics.FirstZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$FirstZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.HeadZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the head of a list in a ZTRef.", "members_class" : [{"label" : "head", "tail" : "(): ZTRef[EA, EB, A, A]", "member" : "zio.optics.toptics.HeadZTRefSyntax.head", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#head:zio.stm.ZTRef[EA,EB,A,A]", "kind" : "def"}, {"member" : "zio.optics.toptics.HeadZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$HeadZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.KeyZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the value at the specified key in amap in a ZTRef.", "members_class" : [{"label" : "key", "tail" : "(k: K): ZTRef[EA, EB, V, V]", "member" : "zio.optics.toptics.KeyZTRefSyntax.key", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#key(k:K):zio.stm.ZTRef[EA,EB,V,V]", "kind" : "def"}, {"member" : "zio.optics.toptics.KeyZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$KeyZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.LeftZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Left case of an Either in aZTRef.", "members_class" : [{"label" : "left", "tail" : "(): ZTRef[EA, EB, C, A]", "member" : "zio.optics.toptics.LeftZTRefSyntax.left", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#left:zio.stm.ZTRef[EA,EB,C,A]", "kind" : "def"}, {"member" : "zio.optics.toptics.LeftZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$LeftZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.NoneZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the None case of an Option in aZTRef.", "members_class" : [{"label" : "none", "tail" : "(): ZTRef[EA, EB, Unit, Unit]", "member" : "zio.optics.toptics.NoneZTRefSyntax.none", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#none:zio.stm.ZTRef[EA,EB,Unit,Unit]", "kind" : "def"}, {"member" : "zio.optics.toptics.NoneZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$NoneZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.RightZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Right case of an Either ina ZTRef.", "members_class" : [{"label" : "right", "tail" : "(): ZTRef[EA, EB, C, B]", "member" : "zio.optics.toptics.RightZTRefSyntax.right", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#right:zio.stm.ZTRef[EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.toptics.RightZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$RightZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.SecondZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the second element of a tuple in aZTRef.", "members_class" : [{"label" : "second", "tail" : "(): ZTRef[EA, EB, C, B]", "member" : "zio.optics.toptics.SecondZTRefSyntax.second", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#second:zio.stm.ZTRef[EA,EB,C,B]", "kind" : "def"}, {"member" : "zio.optics.toptics.SecondZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$SecondZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.SliceZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing a slice of a chunk in a ZTRef.", "members_class" : [{"label" : "slice", "tail" : "(from: Int, until: Int): ZTRef[EA, EB, Chunk[A], Chunk[A]]", "member" : "zio.optics.toptics.SliceZTRefSyntax.slice", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#slice(from:Int,until:Int):zio.stm.ZTRef[EA,EB,zio.Chunk[A],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.optics.toptics.SliceZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$SliceZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.SomeZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the Some case of an Option in aZTRef.", "members_class" : [{"label" : "some", "tail" : "(): ZTRef[EA, EB, B, A]", "member" : "zio.optics.toptics.SomeZTRefSyntax.some", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#some:zio.stm.ZTRef[EA,EB,B,A]", "kind" : "def"}, {"member" : "zio.optics.toptics.SomeZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$SomeZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.TailZTRefSyntax", "shortDescription" : "Provides implicit syntax for accessing the tail of a list in a ZTRef.", "members_class" : [{"label" : "tail", "tail" : "(): ZTRef[EA, EB, List[A], List[A]]", "member" : "zio.optics.toptics.TailZTRefSyntax.tail", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#tail:zio.stm.ZTRef[EA,EB,List[A],List[A]]", "kind" : "def"}, {"member" : "zio.optics.toptics.TailZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$TailZTRefSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.TMapOpticsSyntax", "shortDescription" : "Provides implicit syntax accessing the value at the specified key in aTMap.", "members_class" : [{"label" : "key", "tail" : "(k: K): toptics.OptionalPartiallyApplied[TMap[K, V], V]", "member" : "zio.optics.toptics.TMapOpticsSyntax.key", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#key(k:K):zio.optics.toptics.package.OptionalPartiallyApplied[zio.stm.TMap[K,V],V]", "kind" : "def"}, {"member" : "zio.optics.toptics.TMapOpticsSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$TMapOpticsSyntax.html", "kind" : "class"}, {"name" : "zio.optics.toptics.TOptics", "shortDescription" : "", "object" : "zio\/optics\/toptics\/TOptics$.html", "members_object" : [{"label" : "key", "tail" : "(k: K): toptics.Optional[TMap[K, V], V]", "member" : "zio.optics.toptics.TOptics.key", "link" : "zio\/optics\/toptics\/TOptics$.html#key[K,V](k:K):zio.optics.toptics.Optional[zio.stm.TMap[K,V],V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/TOptics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/TOptics$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/TOptics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/TOptics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/TOptics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/TOptics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/TOptics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/TOptics$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/TOptics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/TOptics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/TOptics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/TOptics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/TOptics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/TOptics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/TOptics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/TOptics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/TOptics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/TOptics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/TOptics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.optics.toptics.ZTRefSyntax", "shortDescription" : "Providing implicit syntax for accessing pieces of a value in a ZTRef.", "members_class" : [{"label" : "accessCase", "tail" : "(optic: toptics.Optic[B, Any, C, ED, EC, D, A]): ZTRef[EC, ED, C, D]", "member" : "zio.optics.toptics.ZTRefSyntax.accessCase", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#accessCase[EC>:EA,ED>:EB,C,D](optic:zio.optics.toptics.package.Optic[B,Any,C,ED,EC,D,A]):zio.stm.ZTRef[EC,ED,C,D]", "kind" : "final def"}, {"member" : "zio.optics.toptics.ZTRefSyntax#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/optics\/toptics\/package$$ZTRefSyntax.html", "kind" : "class"}]};